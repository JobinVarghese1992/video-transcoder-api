{
  "v": 6,
  "name": "Video Transcoding System (v1)",
  "folders": [
    {
      "v": 6,
      "name": "Auth",
      "folders": [],
      "requests": [
        {
          "v": "11",
          "name": "Login",
          "method": "POST",
          "endpoint": "<<ec2Url>>/api/v1/auth/login",
          "params": [],
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "const responseBody = pw.response.body;\n\n// Check if the response body contains the 'token' field.\nif (responseBody && responseBody.token) {\n  // Set the 'jwtToken' environment variable to the value of the 'token' field.\n  pw.env.set(\"jwtToken\", responseBody.token);\n} else {\n  // Log an error if the token was not found, for debugging.\n  console.error(\"Token not found in response body.\");\n}\n",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"username\": \"user2@example.com\",\n  \"password\": \"User2@123\"\n}"
          },
          "requestVariables": [],
          "responses": {}
        }
      ],
      "auth": {
        "authType": "inherit",
        "authActive": true
      },
      "headers": [],
      "_ref_id": "coll_mekrfv5i_89c060ba-bb2f-4e66-a9fb-a3b7d68b2cec"
    },
    {
      "v": 6,
      "name": "Upload (Direct to S3)",
      "folders": [],
      "requests": [
        {
          "v": "11",
          "name": "1) Create Upload URL (server decides single vs multipart)",
          "method": "POST",
          "endpoint": "<<baseUrl>>/api/v1/videos/upload-url",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"fileName\": \"lecture.mp4\",\n  \"sizeBytes\": 157286400,\n  \"contentType\": \"video/mp4\"\n}"
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "2a) Upload (SINGLE) via Pre‑Signed PUT URL",
          "method": "PUT",
          "endpoint": "",
          "params": [],
          "headers": [
            {
              "key": "Content-Type",
              "value": "video/mp4",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": null,
            "body": null
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "2b) Upload PART (MULTIPART) via Pre‑Signed URL",
          "method": "PUT",
          "endpoint": "",
          "params": [],
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": null,
            "body": null
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "3) Complete Upload (SINGLE)",
          "method": "POST",
          "endpoint": "<<baseUrl>>/api/v1/videos/complete-upload",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"videoId\": \"<<videoId>>\",\n  \"key\": \"<<s3Key>>\"\n}"
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "3) Complete Upload (MULTIPART)",
          "method": "POST",
          "endpoint": "<<baseUrl>>/api/v1/videos/complete-upload",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"videoId\": \"<<videoId>>\",\n  \"key\": \"<<s3Key>>\",\n  \"uploadId\": \"<<uploadId>>\",\n  \"parts\": [\n    { \"partNumber\": 1, \"eTag\": \"<<eTag1>>\" },\n    { \"partNumber\": 2, \"eTag\": \"<<eTag2>>\" }\n  ]\n}"
          },
          "requestVariables": [],
          "responses": {}
        }
      ],
      "auth": {
        "authActive": true,
        "authType": "inherit"
      },
      "headers": [],
      "_ref_id": "coll_mekrfv5i_308ae0ae-3c03-4d12-a2bf-5dcd74baef7c"
    },
    {
      "v": 6,
      "name": "Videos",
      "folders": [],
      "requests": [
        {
          "v": "11",
          "name": "List Videos (metadata only)",
          "method": "GET",
          "endpoint": "<<baseUrl>>/api/v1/videos",
          "params": [
            {
              "key": "limit",
              "value": "10",
              "active": true,
              "description": ""
            },
            {
              "key": "page",
              "value": "1",
              "active": true,
              "description": ""
            },
            {
              "key": "createdBy",
              "value": "me",
              "active": true,
              "description": ""
            },
            {
              "key": "sort",
              "value": "createdAt:desc",
              "active": true,
              "description": ""
            }
          ],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": null,
            "body": null
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "List Videos (filter by transcode_status)",
          "method": "GET",
          "endpoint": "<<baseUrl>>/api/v1/videos",
          "params": [
            {
              "key": "limit",
              "value": "5",
              "active": true,
              "description": ""
            },
            {
              "key": "createdBy",
              "value": "me",
              "active": false,
              "description": ""
            },
            {
              "key": "sort",
              "value": "createdAt:desc",
              "active": false,
              "description": ""
            },
            {
              "key": "filter",
              "value": "transcode_status:completed",
              "active": false,
              "description": ""
            },
            {
              "key": "cursor",
              "value": "<<cursor>>",
              "active": false,
              "description": ""
            },
            {
              "key": "sort",
              "value": "fileName:desc",
              "active": false,
              "description": ""
            }
          ],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "const responseBody = pw.response.body;\n\nif (responseBody && responseBody.pagination && responseBody.pagination.cursor) {\n  var c = JSON.stringify(responseBody.pagination.cursor);\n  var ce = encodeURIComponent(c);\n  pw.env.set(\"cursor\", ce)\n             } else {\n  // Log an error if the token was not found, for debugging.\n  console.error(\"Token not found in response body.\");\n}",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": null,
            "body": null
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "Get Single Video (with variants)",
          "method": "GET",
          "endpoint": "<<baseUrl>>/api/v1/videos/vid_415b05e5-2183-4419-b835-73bfde0e1c92",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": null,
            "body": null
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "Update Video Metadata",
          "method": "PUT",
          "endpoint": "<<baseUrl>>/api/v1/videos/<<videoId>>",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"title\": \"Updated Lecture Title\",\n  \"description\": \"New description\"\n}"
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "Delete Video",
          "method": "DELETE",
          "endpoint": "<<baseUrl>>/api/v1/videos/vid_78d7e7e9-0f80-4f96-b897-220480dae81b",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": null,
            "body": null
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "List Videos (cursor)",
          "method": "GET",
          "endpoint": "<<baseUrl>>/api/v1/videos",
          "params": [
            {
              "key": "limit",
              "value": "2",
              "active": true,
              "description": ""
            },
            {
              "key": "page",
              "value": "",
              "active": false,
              "description": ""
            },
            {
              "key": "createdBy",
              "value": "me",
              "active": false,
              "description": ""
            },
            {
              "key": "sort",
              "value": "createdAt:desc",
              "active": false,
              "description": ""
            },
            {
              "key": "filter",
              "value": "transcode_status:completed",
              "active": false,
              "description": ""
            },
            {
              "key": "cursor",
              "value": "<<cursor>>",
              "active": false,
              "description": ""
            }
          ],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "const responseBody = pw.response.body;\n\nif (responseBody && responseBody.pagination && responseBody.pagination.cursor) {\n  var c = JSON.stringify(responseBody.pagination.cursor);\n  var ce = encodeURIComponent(c);\n  pw.env.set(\"cursor\", ce)\n             } else {\n  // Log an error if the token was not found, for debugging.\n  console.error(\"Token not found in response body.\");\n}",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": null,
            "body": null
          },
          "requestVariables": [],
          "responses": {}
        }
      ],
      "auth": {
        "authActive": true,
        "authType": "inherit"
      },
      "headers": [],
      "_ref_id": "coll_mekrfv5i_3ba74f88-b704-431f-9487-be2113fd23fe"
    },
    {
      "v": 6,
      "name": "Transcode",
      "folders": [],
      "requests": [
        {
          "v": "11",
          "name": "Start Transcoding (mp4 → mkv)",
          "method": "POST",
          "endpoint": "<<baseUrl>>/api/v1/videos/<<videoId>>/transcode",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{ \"format\": \"mkv\",\n\"force\": true}"
          },
          "requestVariables": [],
          "responses": {}
        }
      ],
      "auth": {
        "authActive": true,
        "authType": "inherit"
      },
      "headers": [],
      "_ref_id": "coll_mekrfv5j_cf91ed49-de1e-45cc-bbc4-dfaa6d6fc488"
    },
    {
      "v": 6,
      "name": "Replace Original",
      "folders": [],
      "requests": [
        {
          "v": "11",
          "name": "1) Presign URL(s) for Replacement",
          "method": "PUT",
          "endpoint": "<<baseUrl>>/api/v1/videos/<<videoId>>/file",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"fileName\": \"lecture_new.mp4\",\n  \"sizeBytes\": 157286400,\n  \"contentType\": \"video/mp4\"\n}"
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "2a) Upload Replacement (SINGLE) via Pre‑Signed PUT URL",
          "method": "PUT",
          "endpoint": "",
          "params": [],
          "headers": [
            {
              "key": "Content-Type",
              "value": "video/mp4",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": null,
            "body": null
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "2b) Upload Replacement PART (MULTIPART) via Pre‑Signed URL",
          "method": "PUT",
          "endpoint": "",
          "params": [],
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": null,
            "body": null
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "3) Complete Replacement (SINGLE)",
          "method": "POST",
          "endpoint": "<<baseUrl>>/api/v1/videos/<<videoId>>/file/complete",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"videoId\": \"<<videoId>>\",\n  \"key\": \"<<s3Key>>\"\n}"
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "3) Complete Replacement (MULTIPART)",
          "method": "POST",
          "endpoint": "<<baseUrl>>/api/v1/videos/<<videoId>>/file/complete",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"videoId\": \"<<videoId>>\",\n  \"key\": \"<<s3Key>>\",\n  \"uploadId\": \"<<uploadId>>\",\n  \"parts\": [\n    { \"partNumber\": 1, \"eTag\": \"<<eTag1>>\" },\n    { \"partNumber\": 2, \"eTag\": \"<<eTag2>>\" }\n  ]\n}"
          },
          "requestVariables": [],
          "responses": {}
        }
      ],
      "auth": {
        "authActive": true,
        "authType": "inherit"
      },
      "headers": [],
      "_ref_id": "coll_mekrfv5j_efe02eee-5a3e-40e8-8f72-c75ce0d92c9a"
    },
    {
      "v": 6,
      "name": "Upload-Latest",
      "folders": [],
      "requests": [
        {
          "v": "11",
          "name": "Create Upload URL (presign)",
          "method": "POST",
          "endpoint": "<<baseUrl>>/api/v1/videos/upload-url",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "let d = pw.response.body;\n\n// Ensure strategy exists\npw.test(\"Has strategy\", () => {\n  pw.expect(d.strategy).not.toBe(undefined);\n  pw.expect(typeof d.strategy).toBe(\"string\");\n});\n\n// Save common fields\nif (d.videoId) pw.env.set(\"VIDEO_ID\", d.videoId);\nif (d.key) pw.env.set(\"KEY\", d.key);\npw.env.set(\"STRATEGY\", d.strategy);\n\n// Branch: single vs multipart\nif (d.strategy === \"single\") {\n  pw.test(\"Single upload has URL\", () => {\n    pw.expect(d.url).not.toBe(undefined);\n  });\n  pw.env.set(\"SINGLE_PUT_URL\", d.url);\n} else if (d.strategy === \"multipart\") {\n  pw.test(\"Multipart has uploadId and parts\", () => {\n    pw.expect(d.uploadId).not.toBe(undefined);\n    pw.expect(Array.isArray(d.parts)).toBe(true);\n  });\n  pw.env.set(\"UPLOAD_ID\", d.uploadId);\n  pw.env.set(\"PARTS_JSON\", JSON.stringify(d.parts));\n}\n\n",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"fileName\": \"sample1.mp4\",\n  \"sizeBytes\": 1024,\n  \"contentType\": \"video/mp4\"\n}"
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "Single-put",
          "method": "PUT",
          "endpoint": "<<SINGLE_PUT_URL>>",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "content-type",
              "value": "{{CONTENT_TYPE}}",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"fileName\": \"sample1.mp4\",\n  \"sizeBytes\": 102400000000,\n  \"contentType\": \"video/mp4\"\n}"
          },
          "requestVariables": [],
          "responses": {}
        },
        {
          "v": "11",
          "name": "Multipart-upload",
          "method": "POST",
          "endpoint": "<<baseUrl>>/api/v1/videos/upload-url",
          "params": [],
          "headers": [
            {
              "key": "Authorization",
              "value": "Bearer <<jwtToken>>",
              "active": true,
              "description": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "active": true,
              "description": ""
            }
          ],
          "preRequestScript": "",
          "testScript": "let d = pw.response.body;\n\n// Ensure strategy exists\npw.test(\"Has strategy\", () => {\n  pw.expect(d.strategy).not.toBe(undefined);\n  pw.expect(typeof d.strategy).toBe(\"string\");\n});\n\n// Save common fields\nif (d.videoId) pw.env.set(\"VIDEO_ID\", d.videoId);\nif (d.key) pw.env.set(\"KEY\", d.key);\npw.env.set(\"STRATEGY\", d.strategy);\n\n// Branch: single vs multipart\nif (d.strategy === \"single\") {\n  pw.test(\"Single upload has URL\", () => {\n    pw.expect(d.url).not.toBe(undefined);\n  });\n  pw.env.set(\"SINGLE_PUT_URL\", d.url);\n} else if (d.strategy === \"multipart\") {\n  pw.test(\"Multipart has uploadId and parts\", () => {\n    pw.expect(d.uploadId).not.toBe(undefined);\n    pw.expect(Array.isArray(d.parts)).toBe(true);\n  });\n  pw.env.set(\"UPLOAD_ID\", d.uploadId);\n  pw.env.set(\"PARTS_JSON\", JSON.stringify(d.parts));\n}\n\n",
          "auth": {
            "authType": "inherit",
            "authActive": true
          },
          "body": {
            "contentType": "application/json",
            "body": "{\n  \"fileName\": \"sample1.mp4\",\n  \"sizeBytes\": 1024,\n  \"contentType\": \"video/mp4\"\n}"
          },
          "requestVariables": [],
          "responses": {}
        }
      ],
      "auth": {
        "authType": "inherit",
        "authActive": true
      },
      "headers": [],
      "_ref_id": "coll_meyxz3pt_5200edb5-8d23-4453-bf0f-645f069f541f"
    }
  ],
  "requests": [
    {
      "v": "11",
      "name": "Health",
      "method": "GET",
      "endpoint": "<<baseUrl>>/health",
      "params": [],
      "headers": [],
      "preRequestScript": "",
      "testScript": "",
      "auth": {
        "authType": "inherit",
        "authActive": true
      },
      "body": {
        "contentType": null,
        "body": null
      },
      "requestVariables": [],
      "responses": {}
    }
  ],
  "auth": {
    "authActive": true,
    "authType": "inherit"
  },
  "headers": [],
  "_ref_id": "coll_mekrfv5j_5f8acf00-09b9-4c17-a477-031b3d4d8e7e"
}